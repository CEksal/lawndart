// Auto-generated from todo_component.html.
// DO NOT EDIT.

library x_todo_item;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

import '../models.dart';

import '../app.dart' as app;

import 'package:meta/meta.dart';

class TodoItemComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.InputElement __e4;
  autogenerated.LabelElement __e7;
  autogenerated.SpanElement __e6;
  autogenerated.Template __t;
  
  TodoItemComponent.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHtml = '''
    <label class="" id="__e-7">
    <input type="checkbox" id="__e-4">
    <span id="__e-6"></span>
    </label>
    ''';
    __e7 = _root.query('#__e-7');
    __e4 = __e7.query('#__e-4');
    __t.listen(__e4.onChange, ($event) { toggle(); });
    __t.oneWayBind(() => ( isChecked ), (e) { __e4.checked = e; }, false);
    __e6 = __e7.query('#__e-6');
    var __binding5 = __t.contentBind(() => ( todo.actionItem ));
    __e6.nodes.add(__binding5);
    __t.bindClass(__e7, () => ( completeClass ));
    
    __t.create();
  }
  
  void inserted_autogenerated() {
    __t.insert();
  }
  
  void removed_autogenerated() {
    __t.remove();
    __e4 = __e7 = __e6 = __t = null;
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  TodoItem todo;
  WatcherDisposer stopWatcher;
  
  toggle() => todo.toggle();
  
  bool get isChecked => todo.complete;
  
  @override
  void inserted() {
    // just experimenting, the call to save is probably
    // better placed inside of toggle()
    stopWatcher = watch(() => todo.hashCode, (_) => app.storeAllTodos());
  }
  
  @override
  void removed() {
    stopWatcher();
  }
  
  String get completeClass => todo.complete ? 'completed' : '';
}

